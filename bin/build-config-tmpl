#!/usr/bin/env -S /usr/bin/sbcl --script

(let ((quicklisp-init (merge-pathnames "quicklisp/setup.lisp"
                                       (user-homedir-pathname))))
  (when (probe-file quicklisp-init)
    (load quicklisp-init)))

;; Make sure we can provide path to forgerie code...
(let ((forgerie-path (uiop:getenv "FORGERIE_PATH")))
  (when (and forgerie-path (probe-file forgerie-path))
    (push (pathname forgerie-path) asdf:*central-registry*)))

;; so quicklisp is able to run the forgerie code and execute the script
(ql:quickload :forgerie)

(with-open-file (str "config/config.lisp.tmpl" :direction :output :if-exists :supersede)
 (format str
";;;; This template file is generated by bin/build-config-templ and should not be edited manually.
;;;;
;;;; Install by copying to config.lisp~%~%")
 (mapcar
  (lambda (section)
   (format str ";;;;;;;;;;;;;;;;;;;~%;;; ~A~%;;;;;;;;;;;;;;;;;;;~%~%" (car section))
   (mapcar
    (lambda (variable-def)
     (let
      ((variable-name (if (listp variable-def) (car variable-def) variable-def))
       (default (if (listp variable-def) (cadr variable-def) "nil")))
      (format str
       "~{;~A~%~}(setf ~(~A~):~(~A~) ~A)~%~%"
       (mapcar
        (lambda (line)
         (if (< 0 (length line))
          (cl-ppcre:regex-replace-all "^ ?" line " ")
          ""))
        (cl-ppcre:split "\\n" (documentation variable-name 'variable)))
       (package-name (symbol-package variable-name))
       (symbol-name variable-name)
       default
       )))
    (cdr section)))
  '(("system"
     (sb-impl::*default-external-format* ":UTF-8")
     (drakma:*drakma-default-external-format* "'UTF-8"))
    ("core"
     forgerie-core:*debug*
     forgerie-core:*log-mapping-errors*
     forgerie-core:*working-directory*)
    ("phabricator"
     forgerie-phabricator:*database-password*
     forgerie-phabricator:*database-username*
     forgerie-phabricator:*revisions-to-skip*
     forgerie-phabricator:*phabricator-location*
     forgerie-phabricator:*project-assignment-overrides*
     forgerie-phabricator:*repository-overrides*
     forgerie-phabricator:*pastes-to-skip*
     forgerie-phabricator:*user-overrides*
     forgerie-phabricator:*storage-location*
     forgerie-phabricator:*confidential-space-phids*
     forgerie-phabricator:*included-repositories*
     forgerie-phabricator:*staging-repository*
     forgerie-phabricator:*email-address-sanitizer*)
    ("gitlab"
     forgerie-gitlab:*private-token*
     forgerie-gitlab:*server-address*
     forgerie-gitlab:*default-project*
     forgerie-gitlab:*ssh-public-key*
     forgerie-gitlab:*default-group*
     forgerie-gitlab:*rails-command*
     forgerie-gitlab:*rails-command-args*
     forgerie-gitlab:*merge-request-suffix*
     forgerie-gitlab:*ticket-suffix*
     forgerie-gitlab:*limit-to-active-users*))))
